% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ectotherm.R
\name{ectotherm}
\alias{ectotherm}
\title{Ectotherm model.}
\usage{
ectotherm(amass, lometry, ABSMAX, ABSMIN, TMAXPR, TMINPR, TBASK, TEMERGE, ctmax, ctmin,
 tpref, dayact, nocturn, crepus, CkGrShad, burrow, climb, shdburrow, mindepth, maxdepth,
 MR_1, MR_2, MR_3, skinwet, extref, DELTAR, ...)
}
\arguments{
\item{amass}{Mass of animal (g), note this model is 'steady state' so no lags in heating/cooling due to mass}

\item{lometry}{Organism shape, 0-4 (see details)}

\item{ABSMAX}{Maximum solar absorptivity, decimal percent}

\item{ABSMIN}{Maximum solar absorptivity, decimal percent}

\item{TMAXPR}{Voluntary thermal maximum, degrees C (upper body temperature for foraging and also affects burrow depth selection)}

\item{TMINPR}{Voluntary thermal minimum, degrees C (lower body temperature for foraging)}

\item{TBASK}{Minimum basking temperature, degrees C}

\item{TEMERGE}{Temperature at which animal will move to a basking site, degrees C}

\item{ctmax}{Critical thermal maximum, degrees C (affects burrow selection)}

\item{ctmin}{Critical thermal minimum, degrees C (affects burrow selection)}

\item{dayact}{Diurnal activity allowed (1) or not (0)?}

\item{nocturn}{Nocturnal activity allowed (1) or not (0)?}

\item{crepus}{Crepuscular activity allowed (1) or not (0)?}

\item{CkGrShad}{shade seeking allowed (1) or not (0)?}

\item{burrow}{Shelter in burrow allowed (1) or not (0)?}

\item{climb}{climbing to seek cooler habitats allowed (1) or not (0)?}

\item{shdburrow}{choose if the animal's retreat is in the shade (1) or in the open (0)}

\item{mindepth}{Minimum depth (soil node #) to which animal can retreat if burrowing}

\item{maxdepth}{Maximum depth (soil node #) to which animal can retreat if burrowing}

\item{MR_1}{Metabolic rate parameter MR=MR_1*M^MR_2*10^(MR_3*Tb) based on Eq. 2 from Andrews & Pough 1985. Physiol. Zool. 58:214-231}

\item{MR_2}{Metabolic rate parameter}

\item{MR_3}{Metabolic rate parameter}

\item{skinwet}{\% of surface area acting as a free-water exchanger, for computing cutaneous water loss}

\item{extref}{\% oxygen extraction efficiency, for respiratory water loss}

\item{DELTAR}{Temperature difference (deg C) between expired and inspired air, , for respiratory water loss}

\item{tpref}{Preferred body temperature, degrees C}
}
\description{
An implementation of the Niche Mapper ectotherm model that computes body temperature, water loss,
activity and microhabitat selection. It optionally runs the Dynamic Energy Budget (DEB) model for
computing mass budgets (inc. water budgets) and growth, development, reproduction trajectories
as constrained by food, activity and temperature (see Details). When not running the DEB model
a user-specified mass is used as well as a allometric (mass and body temperature) function to
compute metabolic rate.
}
\details{
The microclimate model, e.g. micro_global(), must be run prior to running the ectotherm model


\strong{ Parameters controling how the model runs:}
\strong{ Parameters controling how the model runs:}

\code{runshade}{ = 1, Run the microclimate model twice, once for each shade level (1)
or just once for the minimum shade (0)?}\cr\cr
\code{rungads}{ = 1, Use the Global Aerosol Database? 1=yes, 0=no}\cr\cr
\code{write_input}{ = 0, Write csv files of final input to folder 'csv input' in working directory? 1=yes, 0=no}\cr\cr
\code{writecsv}{ = 0, Make Fortran code write output as csv files? 1=yes, 0=no}\cr\cr

\strong{Outputs:}
metout/shadmet variables:
\itemize{
\item 1 JULDAY - day of year
\item 2 TIME - time of day (mins)
\item 3 TALOC - air temperature (deg C) at local height (specified by 'Usrhyt' variable)
\item 4 TAREF - air temperature (deg C) at reference height (1.2m)
\item 5 RHLOC - relative humidity (\%) at local height (specified by 'Usrhyt' variable)
\item 6 RH  - relative humidity (\%) at reference height (1.2m)
\item 7 VLOC - wind speed (m/s) at local height (specified by 'Usrhyt' variable)
\item 8 VREF - wind speed (m/s) at reference height (1.2m)
\item 9 SNOWMELT - snowmelt (mm)
\item 10 POOLDEP - water pooling on surface (mm)
\item 11 PCTWET - soil surface wetness (\%)
\item 12 ZEN - zenith angle of sun (degrees - 90 = below the horizon)
\item 13 SOLR - solar radiation (W/m2)
\item 14 TSKYC - sky radiant temperature (deg C)
\item 15 DEW - dew presence (0 or 1)
\item 16 FROST - frost presence (0 or 1)
\item 17 SNOWFALL - snow predicted to have fallen (mm)
\item 18 SNOWDEP - predicted snow depth (cm)
}
soil and shadsoil variables:
\itemize{
\item 1 JULDAY - day of year
\item 2 TIME - time of day (mins)
\item 3-12 D0cm ... - soil temperatures at each of the 10 specified depths

if soil moisture model is run i.e. parameter runmoist = 1\cr

soilmoist and shadmoist variables:
\itemize{
\item 1 JULDAY - day of year
\item 2 TIME - time of day (mins)
\item 3-12 WC0cm ... - soil moisuture (m3/m3) at each of the 10 specified depths
}
soilpot and shadpot variables:
\itemize{
\item 1 JULDAY - day of year
\item 2 TIME - time of day (mins)
\item 3-12 PT0cm ... - soil water potential (J/kg = kpa = bar/100) at each of the 10 specified depths
}

humid and shadhumid variables:
\itemize{
\item  1 JULDAY - day of year
\item  2 TIME - time of day (mins)
\item  3-12 RH0cm ... - soil relative humidity (decimal \%), at each of the 10 specified depths
}
}
}
\examples{
# run the microclimate model
micro<-micro_global(loc="Kuranda, Queensland")

# retrieve output
metout<-as.data.frame(micro$metout) # above ground microclimatic conditions, min shade
shadmet<-as.data.frame(micro$shadmet) # above ground microclimatic conditions, max shade
soil<-as.data.frame(micro$soil) # soil temperatures, minimum shade
shadsoil<-as.data.frame(micro$shadsoil) # soil temperatures, maximum shade

# append dates
days<-rep(seq(1,12),24)
days<-days[order(days)]
dates<-days+metout$TIME/60/24-1 # dates for hourly output
dates2<-seq(1,12,1) # dates for daily output
metout<-cbind(dates,metout)
soil<-cbind(dates,soil)
shadmet<-cbind(dates,shadmet)
shadsoil<-cbind(dates,shadsoil)

# run the ectotherm model
ecto<-ectotherm(TMAXPR=35,TMINPR=30,TPREF=33,TBASK=20,TEMERGE=10)

# retrieve output
environ<-as.data.frame(ecto$environ) # activity, Tb and environment
enbal<-as.data.frame(ecto$enbal) # energy balance values
masbal<-as.data.frame(ecto$masbal) # mass balance value (note most missing if DEB model not running)

# append dates
environ<-cbind(dates,environ)
masbal<-cbind(dates,masbal)
enbal<-cbind(dates,enbal)

############### plot results ######################

# Hourly Tb (black), activity (orange, 5=bask, 10=forage), depth (brown, m) and shade (green, \%/10)
with(environ, plot(TC~dates,ylab="Tb, depth, activity and shade", xlab="month of year",
ylim=c(-20,70),type = "l"))
with(environ, points(ACT*5~dates,type = "l",col="orange"))
with(environ, points(SHADE/10~dates,type = "l",col="green"))
with(environ, points(DEP/10~dates,type = "l",col="brown"))
#with(metout, points(TAREF~dates,type = "l",col="light blue"))
abline(ecto$TMAXPR,0,lty=2,col='red')
abline(ecto$TMINPR,0,lty=2,col='blue')

# seasonal activity plot (dark blue = night, light blue = basking, orange = foraging)
forage<-subset(environ,ACT==2)
bask<-subset(environ,ACT==1)
night<-subset(metout,ZEN==90)
day<-subset(metout,ZEN!=90)
with(night,plot(TIME/60~JULDAY,ylab="Hour of Day",xlab="Day of Year",pch=15,cex=2,col='dark blue'))
# nighttime hours
with(forage,points((TIME-1)~JULDAY,pch=15,cex=2,col='orange')) # foraging Tbs
with(bask,points((TIME-1)~JULDAY,pch=15,cex=2,col='light blue')) # basking Tbs
}

